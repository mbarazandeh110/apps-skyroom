keycloak:
  global:
    storageClass: "local-ssd"

  clusterDomain: "cluster.local"

  image:
    registry: registry.arico-b2b.com
    repository: cache/bitnami/keycloak

  production: true

  auth:
    existingSecret: keycloak-admin-auth

  # Set ssl termination on ingress
  proxy: edge

  resources:
    requests:
      cpu: 1000m
      memory: 256Mi
    limits:
      cpu: 2000m
      memory: 1024Mi

  ingress:
    enabled: false

  httpRoute:
    enabled: true
    hostnames:
    - sso.rovzane.com
    parentRefs:
    - name: private-gateway
      namespace: infra

  postgresql:
    enabled: false

  externalDatabase:
    existingSecret: keycloak-pguser-keycloak-admin
    existingSecretHostKey: host
    existingSecretPortKey: port
    existingSecretDatabaseKey: dbname
    existingSecretUserKey: user
    existingSecretPasswordKey: password

  keycloakConfigCli:
    enabled: true
    configuration:
      rovzane.json: |
        {
          "enabled": true,
          "realm": "rovzane",
          "clients": [
            {
              "clientId": "delivery-argocd",
              "name": "ArgoCD Client",
              "description": "",
              "rootUrl": "https://delivery.rovzane.com",
              "adminUrl": "https://delivery.rovzane.com",
              "baseUrl": "/applications",
              "enabled": true,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
              "/auth/callback"
              ],
              "standardFlowEnabled": true,
              "directAccessGrantsEnabled": true,
              "protocol": "openid-connect",
              "protocolMappers": [
              {
                "name": "groups",
                "protocol": "openid-connect",
                "protocolMapper": "oidc-group-membership-mapper",
                "consentRequired": false,
                "config": {
                  "full.path": "false",
                  "introspection.token.claim": "true",
                  "userinfo.token.claim": "true",
                  "id.token.claim": "true",
                  "access.token.claim": "true",
                  "claim.name": "groups"
                }
              }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ],
              "access": {
                "view": true,
                "configure": true,
                "manage": true
              }
            }
          ],
          "groups": [
            {
              "name": "Admins"
            },
            {
              "name": "Devs"
            },
            {
              "name": "SuperAdmins"
            },
            {
              "name": "TestEngineers"
            },
          ]
        }
      prd.json: |
        {
          "enabled": true,
          "realm": "prd",
          "clients": [
            {
              "clientId": "prd-argocd",
              "name": "ArgoCD Client",
              "description": "",
              "rootUrl": "https://172.16.134.6:30333/",
              "adminUrl": "https://172.16.134.6:30333",
              "baseUrl": "/applications",
              "enabled": true,
              "clientAuthenticatorType": "client-secret",
              "redirectUris": [
              "/auth/callback"
              ],
              "standardFlowEnabled": true,
              "directAccessGrantsEnabled": true,
              "protocol": "openid-connect",
              "protocolMappers": [
                {
                  "name": "groups",
                  "protocol": "openid-connect",
                  "protocolMapper": "oidc-group-membership-mapper",
                  "consentRequired": false,
                  "config": {
                    "full.path": "false",
                    "introspection.token.claim": "true",
                    "userinfo.token.claim": "true",
                    "id.token.claim": "true",
                    "access.token.claim": "true",
                    "claim.name": "groups"
                  }
                }
              ],
              "defaultClientScopes": [
                "web-origins",
                "acr",
                "profile",
                "roles",
                "email"
              ],
              "optionalClientScopes": [
                "address",
                "phone",
                "offline_access",
                "microprofile-jwt"
              ],
              "access": {
                "view": true,
                "configure": true,
                "manage": true
              }
            }
          ],
          "groups": [
            {
              "name": "Admins"
            },
            {
              "name": "Devs"
            },
            {
              "name": "SuperAdmins"
            },
            {
              "name": "TestEngineers"
            },
          ]
        }

postgrescluster:
  enabled: true
  postgresVersion: 14
  pgBouncerReplicas: 1
  monitoring: true
  instances:
  - name: pgha1
    replicas: 3
    dataVolumeClaimSpec:
      storageClassName: "local-ssdraid"
      accessModes:
      - "ReadWriteOnce"
      resources:
        requests:
          storage: 2Gi
    resources:
      requests:
        memory: 1Gi
        cpu: 1000m
      limits:
        memory: 2Gi
        cpu: 2000m
  patroni:
    dynamicConfiguration:
      synchronous_mode: true
      postgresql:
        parameters:
          synchronous_commit: "on"
  users:
  - name: keycloak-admin
    databases:
    - sky_keycloak
  # TODO: Change backup storage to S3
  backupsStorageClassName: "local-hdd"
  pgBouncerConfig:
    config:
      global:
        pool_mode: transaction
        ignore_startup_parameters: search_path,extra_float_digits
